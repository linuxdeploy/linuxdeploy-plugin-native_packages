Name:       {{ meta_info["package_name"] }}
Version:    {{ fixed_version }}
Release:    {{ meta_info.get("release") | default("1", true) }}%{?dist}
Summary:    {{ meta_info.get("short_description") | default("ldnp-built package", true) }}

Group:      {{ meta_info.get("group") | default("System Environment/Base", true) }}
License: {{ meta_info.get("license") | default("unknown") }}

{% if meta_info.get("url") %}
URL: {{ meta_info["url"] }}
{% endif %}
{% if meta_info.get("bug_url") %}
BugURL:    {{ meta_info["bug_url"] }}
{% endif %}
{% if meta_info.get("vendor") %}
Vendor: {{ meta_info["vendor"] }}
{% endif %}

{# just some advertising... #}
Packager: {{ meta_info["packager"] | default("linuxdeploy-plugin-native_packages", true) }}

# note: we must _not_ strip these files again, this breaks them beyond repair
# (in theory, they have been stripped by linuxdeploy already anyway)
# https://imvoid.wordpress.com/2013/06/05/stripping-and-stopping-stripping-of-binaries-in-rpm-build/
%global _enable_debug_package 0
%global debug_package %{nil}
%global __os_install_post /usr/lib/rpm/brp-compress %{nil}

# prevent RPM from editing Requires: and Provides:
# this guessing is broken due to the fact that the AppDir contains almost all of the dependencies itself
AutoReqProv: no

{% for req in meta_info.get("requires", "").split() %}
Requires: {{ req }}
{% endfor %}
{% for prov in meta_info.get("provides", "").split() %}
Provides: {{ prov }}
{% endfor %}
{% for conflict in meta_info.get("conflicts", "").split() %}
Conflicts: {{ conflict }}
{% endfor %}
{% for obs in meta_info.get("obsoletes", "").split() %}
Obsoletes: {{ obs }}
{% endfor %}
{% for rec in meta_info.get("recommends", "").split() %}
Recommends: {{ rec }}
{% endfor %}
{% for suggestion in meta_info.get("suggests", "").split() %}
Suggests: {{ suggestion }}
{% endfor %}
{% for suppl in meta_info.get("supplements", "").split() %}
Supplements: {{ suppl }}
{% endfor %}
{% for enhances in meta_info.get("enhances", "").split() %}
Enhances: {{ enhances }}
{% endfor %}

%description
{{ meta_info.get("description") | default(meta_info.get("short_description"), true) | default("ldnp-built package", true) }}

%prep
# nothing to do
true

%build
# nothing to do either
true

%install
# variable is defined during rpmbuild call and points to the temporary install root dir in the context
mkdir -p %{buildroot}/
cp -rfa %{_install_root}/* %{buildroot}/

%files
# install all the files we just copied
{%- for file in files %}
{{ file }}
{%- endfor %}

{% for script_type in scriptlets %}
%{{ scriptlet.type }} -p {{ scriptlet.shebang }}
{{ scriptlet.content }}
{% endfor %}
