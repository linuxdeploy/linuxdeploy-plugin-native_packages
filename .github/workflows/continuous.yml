name: Continuous release

on: [push, pull_request]

env:
  APPIMAGE_EXTRACT_AND_RUN: 1

jobs:
  qa:
    name: Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install dependencies
        run: |
          sudo apt-get install python3-poetry libgpgme-dev
          poetry install
      - name: Check code formatting with black
        run: poetry run black --check ldnp/

  build-appimage:
    name: Build AppImage
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install -y rpm wget git build-essential swig file
      - uses: actions/checkout@v5
      - name: Build AppImage
        run: |
          git config --global --add safe.directory '*'
          wget https://github.com/TheAssassin/appimagecraft/releases/download/continuous/appimagecraft-x86_64.AppImage
          chmod +x appimagecraft-x86_64.AppImage
          # need to specify a custom build directory
          # otherwise, the path will become too long, causing conda to generate invalid shebangs
          # see https://github.com/conda/conda/issues/12250
          ./appimagecraft-x86_64.AppImage -d /tmp/build
      - name: Archive artifacts
        uses: actions/upload-artifact@v5
        with:
          name: AppImage
          path: linuxdeploy-plugin-native_packages*.AppImage*

  upload:
    name: Create release and upload artifacts
    runs-on: ubuntu-latest
    needs:
      # by depending on QA, we can make sure it succeeded before uploading
      # this allows us to run them in parallel
      - qa
      - build-appimage
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
          chmod +x pyuploadtool-x86_64.AppImage
          ./pyuploadtool-x86_64.AppImage linuxdeploy-plugin-native_packages*.AppImage*
